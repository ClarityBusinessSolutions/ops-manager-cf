# Per RHEL-08-010671: RHEL 8 must disable the kernel.core_pattern
kernel.core_pattern = |/bin/false

# Kernel PID Max
kernel.pid_max=65536

# Minimal preemption granularity for CPU-bound tasks:
# (default: 1 msec#  (1 + ilog(ncpus)), units: nanoseconds)
kernel.sched_min_granularity_ns=10#i000

# The total time the scheduler will consider a migrated process
# "cache hot" and thus less likely to be re-migrated
# (system default is 500000, i.e. 0.5 ms)
kernel.sched_migration_cost_ns=5000000

# If a workload mostly uses anonymous memory and it hits this limit, 
# the entire working set is buffered for I/O, and any more write
# buffering would require
# swapping, so it'"'"'s time to throttle writes until I/O can catch up.  
# Workloads that mostly use file mappings may be able to use even higher
# values.
#
# The generator of dirty data starts writeback at this percentage 
#(system default is 20%)
vm.dirty_ratio=10

# Start background writeback (via writeback threads) at this percentage (system
# default is 10%)
vm.dirty_background_ratio=3

# https://jira.mongodb.org/browse/DOCS-6174
# Max map count should be 2x Max incoming connections
vm.max_map_count=128000

## Set correct NUMA value
# Non Uniform Memory Access (NUMA) allows machines with multiple CPU chips to
# have each chip use a specific subset of the RAM to make caching easier.
# If a CPU accesses a RAM block then in general that RAM will be used only by
# that CPU to avoid problems where it's cached - but on the wrong CPU.
# There are many parameters that control this but for MongoDB we want the OS
# to not do this and to allow any CPU access to any physical memory.
vm.zone_reclaim_mode=0

## Set correct swappiness
# It is best practice when setting up a server for MongoDB in production to
# allocate some swap space - either to a dedicated device or to a file on a
# shared device. It is not required for a system you are setting up testing.
vm.swappiness=1

# TCP Keepalive
net.ipv4.tcp_keepalive_time=120

